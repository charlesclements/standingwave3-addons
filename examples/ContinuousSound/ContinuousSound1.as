package{		// Imports.	import com.greensock.events.LoaderEvent;	import com.greensock.loading.LoaderMax;	import com.greensock.loading.MP3Loader;	import flash.display.Sprite;	import flash.events.Event;	import com.greensock.TweenMax;	import com.SW3.gadget.LoopGadget;	import flash.media.Sound;	import com.noteflight.standingwave3.elements.Sample;	import flash.utils.getTimer;	import com.noteflight.standingwave3.output.AudioPlayer;	import com.noteflight.standingwave3.performance.AudioPerformer;	import com.noteflight.standingwave3.performance.ListPerformance;	import flash.media.AudioDecoder;	import com.noteflight.standingwave3.elements.AudioDescriptor;	import com.noteflight.standingwave3.sources.SineSource;	import com.noteflight.standingwave3.elements.IAudioSource;		// Class.	public class ContinuousSound1 extends Sprite	{			// Vars.		private var loader:LoaderMax;		var source:IAudioSource = new SineSource(new AudioDescriptor(), 10000, 220, 0.5);		var player:AudioPlayer = new AudioPlayer;				// Constructor.		public function ContinuousSound1()		{						trace("LoopingWork2");						loader = new LoaderMax( { name:"audio", onComplete:onSoundsLoaded } );			loader.append( new MP3Loader( "assets/Beat.mp3", { autoPlay:false } ) );			loader.load();					}						private function onSoundsLoaded(e:LoaderEvent):void		{						trace("onSoundsLoaded");			var list:ListPerformance = new ListPerformance;			list.addSourceAt( 0, source, -50 );			var performer:AudioPerformer = new AudioPerformer( list, new AudioDescriptor );			player.play( performer );						// Calls to get player position.			delayedCall();			TweenMax.to( {}, 2, { onComplete:delayedCall } );			TweenMax.to( {}, 5, { onComplete:delayedCall } );					}						private function delayedCall():void		{						trace( player.position );					}			}		}